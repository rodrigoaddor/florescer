import 'package:florescer/data/data.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

final List<String> satisfactionTexts = [
  'Extremamente infeliz.\nSentem-se infelizes com tudo, indicando desequilibrio '
      'em diversas √°reas de sua vida.\nNesse caso, √© indicado a ajuda de um '
      'especialista imediatamente.',
  'Insatisfeito.\nSentem-se substancialmente insatisfeitas com suas vidas, podem estar mal em '
      '1 ou mais √°reas da vida.\nNesse caso, se a insatisfa√ß√£o for uma resposta a um '
      'grave evento recente (divorcio, falecimento, demiss√£o...) √© provavel que com '
      'o tempo, retornem a seus n√≠veis anterior de satisfa√ß√£o.\nEntretanto, se a '
      'insatisfa√ß√£o for cr√¥nica, mudan√ßas se fazem necess√°rias- tanto nas atitudes '
      'quanto nos padr√µes mentais e atividades di√°rias.\nNesta faixa, a pessoa pode '
      'estar funcionando bem porque a infelicidade atua como uma distra√ß√£o. Embora '
      'a mudan√ßa positiva dependa sempre da pessoa, a ajuda de um especialista '
      'poder√° ser fundamental.',
  'Pouco satisfeito.\nPessoas que pontuam nesta faixa geralmente possuem problemas '
      'pequenos, por√©m significativos, problemas em diversas √°reas de suas vidas. Ou '
      'ent√£o, est√£o bem em diversas √°reas, mas possuem uma √°rea que representa um '
      'problema susbstacial para elas.',
  'De satisfeito a extremamente satisfeito.\nAs pessoas que est√£o na faixa acima '
      'de 20 pontos, est√£o caminhando para a busca de uma maior significado de vida '
      'e que muitas coisas est√£o indo muito bem em sua vida, sente uma motiva√ß√£o e '
      'uma votade imensa de vencer.\nPara a maioria das pessoas que est√£o nessa faixa, '
      'percebe a vida como prazerosa e os principais dominios de suas exist√™ncias '
      'funcionam a contento: Trabalho, fam√≠lia, relacionamentos, sa√∫de, qualidade de '
      'vida, espiritualidade e paz de esp√≠rito.'
];

final List<String> satisfactionEmojis = [
  'üò©',
  'üòî',
  'üòê',
  'üòÉ',
];

class ResultIntroPage extends StatefulWidget {
  @override
  _ResultIntroPageState createState() => _ResultIntroPageState();
}

class _ResultIntroPageState extends State<ResultIntroPage> with SingleTickerProviderStateMixin {
  int getSatisfactionIndex(int i) {
    if (i <= 9) {
      return 0;
    } else if (i <= 14) {
      return 1;
    } else if (i <= 19) {
      return 2;
    } else {
      return 3;
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final texts = theme.textTheme;

    final satisfaction = context.select((AppData data) => data.user.satisfaction);

    return Scaffold(
      backgroundColor: Theme.of(context).primaryColor,
      appBar: AppBar(
        title: Text('Satisfa√ß√£o'),
        centerTitle: true,
        automaticallyImplyLeading: false,
        elevation: 0,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Padding(
              padding: const EdgeInsets.only(bottom: 32),
              child: Text(
                satisfactionEmojis[getSatisfactionIndex(satisfaction)],
                style: texts.headline1.copyWith(color: Colors.black),
              ),
            ),
            Text(
              'Resultado: $satisfaction pontos',
              style: texts.headline6.copyWith(color: Colors.white),
            ),
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 32, vertical: 16),
              child: Text(
                '${satisfactionTexts[getSatisfactionIndex(satisfaction)]}'.replaceAll('\n', '\n\n'),
                style: texts.bodyText2.copyWith(color: Colors.white),
                textAlign: TextAlign.center,
              ),
            ),
            RaisedButton(
              child: Text('Pr√≥ximo'),
              onPressed: () => Navigator.pushNamed(context, '/end'),
            )
          ],
        ),
      ),
    );
  }
}
